{"version":3,"sources":["components/bike_information.tsx","components/configuration.tsx","components/side_bar.tsx","components/top_bar.tsx","components/user_information.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["frameOptions","forkOptions","shockOptions","PhotoUpload","photoUploaded","title","useState","photo","setPhoto","Card","CardContent","Typography","variant","Button","sx","theme","height","width","onClick","e","window","confirm","prev","AddAPhoto","BikeInformation","data","update","frameUploaded","setFrameUploaded","forkUploaded","setForkUploaded","shockUploaded","setShockUploaded","useEffect","target","value","Stack","Grid","container","spacing","item","xs","Divider","marginTop","marginBottom","CardActions","FormControl","InputLabel","Select","label","placeholder","onChange","map","option","MenuItem","DataDisplay","Object","entries","key","Configuration","SideBar","Drawer","style","Container","mixins","toolbar","List","paddingTop","ListItem","ListItemIcon","ArrowRight","ListItemText","primary","TopBar","page","AppBar","position","zIndex","drawer","Toolbar","component","flexGrow","UserInformation","advanced","setAdvanced","Input","type","startIcon","ArrowUpward","ArrowDownward","endIcon","current","App","setData","setPage","updateKey","newValue","old","CssBaseline","bottom","right","overflow","Fab","disabled","left","ArrowBack","ArrowForward","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","StyledEngineProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.1fa43a0c.chunk.js","sourcesContent":["import { Card, CardActions, CardContent, FormControl, InputLabel, MenuItem, Select, Stack, Typography, Grid, Divider, Button } from \"@mui/material\";\nimport { AddAPhoto } from \"@mui/icons-material\";\nimport { useEffect, useState } from \"react\";\nimport { DataType } from \"../App\";\n\nconst frameOptions: string[] = [\n  \"frame 1\",\n  \"frame 2\",\n  \"frame 3\"\n]\n\nconst forkOptions: string[] = [\n  \"fork 1\",\n  \"fork 2\",\n  \"fork 3\"\n]\n\nconst shockOptions: string[] = [\n  \"shock 1\",\n  \"shock 2\",\n  \"shock 3\"\n]\n\nconst PhotoUpload: React.FC<{ photoUploaded: () => void, title: string }> = ({ photoUploaded, title }) => {\n  const [photo, setPhoto] = useState<boolean>(false)\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\">{title}</Typography>\n        { photo ?\n          null : (\n          <Button\n            sx={theme => ({height: 200, width: '100%'})}\n            onClick={e => {\n              if (window.confirm(\"This is a file dialog, confirm to \\\"upload file\\\"\"))\n                setPhoto(prev => !prev);\n                photoUploaded();\n            }}\n          >\n            <AddAPhoto />\n          </Button>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n\nconst BikeInformation: React.FC<Props> = ({ data, update }) => {\n  const [frameUploaded, setFrameUploaded] = useState<boolean>(false);\n  const [forkUploaded, setForkUploaded] = useState<boolean>(false);\n  const [shockUploaded, setShockUploaded] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (frameUploaded && forkUploaded && shockUploaded) {\n      update(\"Frame\")({target: {value: frameOptions[0]}});\n      update(\"Fork\")({target: {value: forkOptions[1]}});\n      update(\"Shock\")({target: {value: shockOptions[2]}});\n    }\n  }, [frameUploaded, forkUploaded, shockUploaded]);\n\n  return (\n    <Stack>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <PhotoUpload\n            photoUploaded={() => {\n              setFrameUploaded(true)\n            }}\n            title={\"Front\"} />\n        </Grid>\n        <Grid item xs={4}>\n          <PhotoUpload\n            photoUploaded={() => {\n              setForkUploaded(true)\n            }}\n            title={\"Side\"} />\n        </Grid>\n        <Grid item xs={4}>\n          <PhotoUpload\n            photoUploaded={() => {\n              setShockUploaded(true)\n            }}\n            title={\"Top\"} />\n        </Grid>\n      </Grid>\n      <Divider sx={theme => ({marginTop: 5, marginBottom: 5})} />\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\">Frame</Typography>\n              {/* <Typography variant=\"body1\">{data[\"Frame\"]}</Typography> */}\n            </CardContent>\n            <CardActions>\n              <FormControl>\n                <InputLabel>Frame</InputLabel>\n                <Select\n                  value={data[\"Frame\"]}\n                  label=\"Frame\"\n                  placeholder=\"Frame\"\n                  onChange={update(\"Frame\")}\n                >\n                  { frameOptions.map(option => <MenuItem value={option} key={option}>{option}</MenuItem>)}\n                </Select>\n              </FormControl>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\">Fork</Typography>\n              {/* <Typography variant=\"body1\">{data[\"Fork\"]}</Typography> */}\n            </CardContent>\n            <CardActions>\n              <FormControl>\n                <InputLabel>Fork</InputLabel>\n                <Select\n                  value={data[\"Fork\"]}\n                  label=\"Fork\"\n                  placeholder=\"Fork\"\n                  onChange={update(\"Fork\")}\n                >\n                  { forkOptions.map(option => <MenuItem value={option} key={option}>{option}</MenuItem>)}\n                </Select>\n              </FormControl>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\">Shock</Typography>\n              {/* <Typography variant=\"body1\">{data[\"Shock\"]}</Typography> */}\n            </CardContent>\n            <CardActions>\n              <FormControl>\n                <InputLabel>Shock</InputLabel>\n                <Select\n                  value={data[\"Shock\"]}\n                  label=\"Shock\"\n                  placeholder=\"Shock\"\n                  onChange={update(\"Shock\")}\n                >\n                  { shockOptions.map(option => <MenuItem value={option} key={option}>{option}</MenuItem>)}\n                </Select>\n              </FormControl>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n    </Stack>\n  )\n}\n\ninterface Props {\n  data: DataType;\n  update: (key: keyof DataType) => (e: {target: { value: number | string }}) => void;\n}\n\nexport default BikeInformation;\n","import { Button, Card, CardActions, CardContent, Grid, Stack, Typography } from \"@mui/material\";\nimport { DataType } from \"../App\";\n\nconst DataDisplay: React.FC<{title: string, data: Record<string, string>}> = ({title, data}) => {\n  return (\n    <Card>\n      <CardContent>\n        <Grid container>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\">{title}</Typography>\n          </Grid>\n          <Grid item xs={6}>\n            { Object.entries(data).map(([key, value]) => {\n              return (\n                <Typography variant=\"body1\">\n                  - {key}: {value}\n                </Typography>\n              )\n            })}\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions>\n        <Button>\n          Expand\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nconst Configuration: React.FC<Props> = () => {\n  return (\n    <Stack spacing={4}>\n      <DataDisplay\n        title=\"Cockpit\"\n        data={{\n          \"Handlebar Width\": \"780 mm\",\n          \"Handlebar Rise\": \"20 mm\",\n          \"Stem Length\": \"50 mm\",\n          \"Stem Spacers\": \"10 mm\"\n        }}\n        />\n      <DataDisplay\n        title=\"Fork\"\n        data={{\n          \"Air Pressure\": \"98 PSI\",\n          \"Volume Spacers\": \"3\",\n          \"HSC\": \"2 out\",\n          \"LSC\": \"3 out\",\n          \"HSR\": \"8 out\",\n          \"LSR\": \"6 out\"\n        }}\n        />\n      <DataDisplay\n        title=\"Shock\"\n        data={{\n          \"Air Pressure\": \"260 PSI\",\n          \"Volume Spacers\": \"2\",\n          \"HSC\": \"4 out\",\n          \"LSC\": \"1 out\",\n          \"HSR\": \"5 out\",\n          \"LSR\": \"8 out\"\n        }}\n        />\n      <DataDisplay\n        title=\"Wheels\"\n        data={{\n          \"Front Tire Pressure\": \"22 PSI\",\n          \"Rear Tire Pressure\": \"25 PSI\",\n          \"Inserts?\": \"Yes\",\n          \"Tubes?\": \"No\"\n        }}\n        />\n    </Stack>\n  )\n}\n\ninterface Props {\n  data: DataType;\n}\n\nexport default Configuration;\n","import { ArrowRight } from \"@mui/icons-material\";\nimport { Container, Drawer, Grid, List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport { DataType } from \"../App\";\n\n\nconst SideBar: React.FC<Props> = ({ data }) => {\n  return (\n    <Drawer variant=\"permanent\">\n      <div style={{ width: 300 }}>\n        <Container sx={theme => theme.mixins.toolbar} />\n        <List style={{ paddingTop: 20 }}>\n          { Object.entries(data)\n                  .map(([key, value]) => {\n                    return (\n                      <ListItem key={key}>\n                        <ListItemIcon>\n                          <ArrowRight />\n                        </ListItemIcon>\n                        <Grid container spacing={3}>\n                          <Grid item>\n                            <ListItemText primary={key} />\n                          </Grid>\n                          <Grid item>\n                            <ListItemText primary={value ?? \"n/a\"} />\n                          </Grid>\n                        </Grid>\n                      </ListItem>\n                    )\n                  })\n          }\n        </List>\n      </div>\n    </Drawer>\n  )\n}\n\ninterface Props {\n  data: DataType\n}\n\nexport default SideBar;\n","import { AppBar, Stack, Toolbar, Typography } from '@mui/material';\n\nconst TopBar: React.FC<Props> = ({ page }) => {\n  let title: string = [\n    \"User Information\",\n    \"Bike Information\",\n    \"Configuration\"\n  ][page];\n\n  return (\n    <AppBar position='absolute' sx={theme => ({ zIndex: theme.zIndex.drawer + 1 })}>\n      <Toolbar>\n        <Typography variant=\"h4\" component=\"div\" sx={{ flexGrow: 1 }}>\n          {title}\n        </Typography>\n        <Stack>\n          <Typography variant=\"h5\">\n            MTB Tuning Guide\n          </Typography>\n          <Typography variant=\"caption\">\n            Page { page + 1 } of 3: { title }\n          </Typography>\n        </Stack>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\ninterface Props {\n  page: number;\n}\n\nexport default TopBar;\n","import { ArrowDownward, ArrowUpward } from \"@mui/icons-material\";\nimport { Button, FormControl, Input, InputLabel, MenuItem, Select, Stack } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { DataType } from \"../App\";\n\nconst UserInformation: React.FC<Props> = ({ data, update }) => {\n  const [advanced, setAdvanced] = useState<boolean>(false)\n\n  return (\n    <>\n      <Stack spacing={10}>\n        <Stack spacing={10}>\n          <div></div>\n          <FormControl>\n            <InputLabel>Height</InputLabel>\n            <Input\n              type='number'\n              placeholder='Height'\n              value={data['Height']}\n              onChange={update(\"Height\")}\n            />\n          </FormControl>\n          <FormControl>\n            <InputLabel>Weight</InputLabel>\n            <Input\n              type='number'\n              placeholder='Weight'\n              value={data['Weight']}\n              onChange={update(\"Weight\")}\n            />\n          </FormControl>\n          <FormControl>\n            <InputLabel>Skill Level</InputLabel>\n            <Select\n              value={data[\"Skill Level\"]}\n              label=\"Skill Level\"\n              placeholder=\"Skill Level\"\n              onChange={update(\"Skill Level\")}\n            >\n              <MenuItem value='beginner'>beginner</MenuItem>\n              <MenuItem value='intermediate'>intermediate</MenuItem>\n              <MenuItem value='expert'>expert</MenuItem>\n            </Select>\n          </FormControl>\n        </Stack>\n      { advanced ? (\n        <>\n          <Stack spacing={10}>\n            <FormControl>\n              <InputLabel>Inseam</InputLabel>\n              <Input\n                type='number'\n                placeholder='Inseam'\n                value={data['Inseam']}\n                onChange={update(\"Inseam\")}\n              />\n            </FormControl>\n            <FormControl>\n              <InputLabel>Ape Index</InputLabel>\n              <Input\n                type='number'\n                placeholder='Ape Index'\n                value={data['Ape Index']}\n                onChange={update(\"Ape Index\")}\n              />\n            </FormControl>\n            <FormControl>\n              <InputLabel>Weight Bias</InputLabel>\n              <Select\n                value={data[\"Weight Bias\"]}\n                label=\"Weight Bias\"\n                placeholder=\"Weight Bias\"\n                onChange={update(\"Weight Bias\")}\n              >\n                <MenuItem value='back'>back</MenuItem>\n                <MenuItem value='neutral'>neutral</MenuItem>\n                <MenuItem value='front'>front</MenuItem>\n              </Select>\n            </FormControl>\n          </Stack>\n        </>\n      ) : null}\n      <Button\n        variant=\"contained\"\n        startIcon={advanced ? <ArrowUpward /> : <ArrowDownward />}\n        endIcon={advanced ? <ArrowUpward /> : <ArrowDownward />}\n        onClick={e => setAdvanced(current => !current)}\n      >\n        Advanced Options\n      </Button>\n      </Stack>\n    </>\n  )\n}\n\ninterface Props {\n  data: DataType;\n  update: (key: keyof DataType) => (e: {target: { value: number | string }}) => void;\n}\n\nexport default UserInformation;\n","import { ArrowBack, ArrowForward } from '@mui/icons-material';\nimport { Container, CssBaseline, Fab } from '@mui/material';\nimport { useState } from 'react';\nimport BikeInformation from './components/bike_information';\nimport Configuration from './components/configuration';\nimport SideBar from './components/side_bar';\nimport TopBar from './components/top_bar';\nimport UserInformation from './components/user_information';\n\nexport interface DataType {\n  \"Height\": null | number;\n  \"Weight\": null | number;\n  \"Skill Level\": string;\n  \"Inseam\": null | number;\n  \"Ape Index\": null | number;\n  \"Weight Bias\": string;\n  \"Frame\": string;\n  \"Fork\": string;\n  \"Shock\": string;\n}\n\nfunction App() {\n  const [data, setData] = useState<DataType>({\n    \"Height\": null,\n    \"Weight\": null,\n    \"Skill Level\": \"\",\n    \"Inseam\": null,\n    \"Ape Index\": null,\n    \"Weight Bias\": \"\",\n    \"Frame\": \"\",\n    \"Fork\": \"\",\n    \"Shock\": \"\"\n  });\n\n  const [page, setPage] = useState<number>(0);\n\n  const updateKey = (key: keyof DataType) => (e: {target: { value: number | string }}) => {\n    const newValue = e.target.value;\n    setData(old => ({ ...old, [key]: newValue}));\n  }\n\n  const disableForward = () => {\n    if (page === 0) {\n      return data[\"Height\"] === null || data[\"Weight\"] === null || data[\"Skill Level\"] === \"\";\n    } else if (page === 1) {\n      return data[\"Frame\"] === \"\" || data[\"Fork\"] === \"\" || data[\"Shock\"] === \"\"\n    } else {\n      return true\n    }\n  }\n\n  return (\n    <>\n      <CssBaseline />\n      <TopBar page={page} />\n      <SideBar data={data} />\n      <Container sx={theme => ({\n        height: `calc(100vh - 64px)`,\n        width: `calc(100vw - 300px)`,\n        position: 'fixed',\n        bottom: 0,\n        right: 0,\n        overflow: 'scroll'\n      })}>\n        {page === 0 ? (\n          <UserInformation data={data} update={updateKey} />\n        ) : page === 1 ? (\n          <BikeInformation data={data} update={updateKey} />\n        ) : (\n          <Configuration data={data} />\n        )}\n      </Container>\n      <Fab disabled={page <= 0} onClick={e => setPage(old => old - 1)} style={{\n        position: 'fixed',\n        bottom: 20,\n        left: 320\n      }}>\n        <ArrowBack />\n      </Fab>\n      <Fab disabled={disableForward()} onClick={e => setPage(old => old + 1)} style={{\n        position: 'fixed',\n        bottom: 20,\n        right: 20\n      }}>\n        <ArrowForward />\n      </Fab>\n\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StyledEngineProvider } from '@mui/styled-engine';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StyledEngineProvider injectFirst>\n      <App />\n    </StyledEngineProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}